<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>lus</string>
	</array>
	<key>name</key>
	<string>Lustre</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>comment</key>
			<string>Comments (single line).</string>
			<key>match</key>
			<string>\s*--\s+(.*)</string>
			<key>name</key>
			<string>comment.other.lustre</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Contract annotations.</string>
			<key>match</key>
			<string>\s*--@(require|ensure)\b</string>
			<key>name</key>
			<string>keyword.lustre</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Field annotation.</string>
			<key>match</key>
			<string>\s*--!(\w+)</string>
			<key>name</key>
			<string>keyword.lustre</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Kind annotations.</string>
			<key>match</key>
			<string>\s*--%(\w+)</string>
			<key>name</key>
			<string>keyword.lustre</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#floatCst</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#intCst</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#boolCst</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#types</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#stringCst</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#nodePref</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#nodeRet</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#streamDef</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#nodeCall</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#structConstr</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Keywords.</string>
			<key>match</key>
			<string>\b(type|var|let|tel|const|assert|condact|include)\b</string>
			<key>name</key>
			<string>keyword.lustre</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>More keywords.</string>
			<key>match</key>
			<string>\b(if|then|else|pre|not|and|or|mod)\b|-&gt;|\+</string>
			<key>name</key>
			<string>keyword.lustre</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>\s*--@contract\s+([a-zA-Z]\w*)\s+</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.lustre</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Contract definition.</string>
			<key>end</key>
			<string>;</string>
			<key>name</key>
			<string>keyword.lustre</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Comments (single line).</string>
			<key>match</key>
			<string>\s*--.*</string>
			<key>name</key>
			<string>comment.lustre</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>\(\*</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.lustre</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Comments (multiline).</string>
			<key>end</key>
			<string>\*\)</string>
			<key>name</key>
			<string>comment.block.lustre</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>betterTypes</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>Primitive types.</string>
					<key>match</key>
					<string>\b(bool|int|real)\b</string>
					<key>name</key>
					<string>support.type.lustre</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(subrange)\s*\[</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.type.lustre</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Subranges.</string>
					<key>end</key>
					<string>\]</string>
					<key>name</key>
					<string>constant.numeric.lustre</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#intCst</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\[)</string>
					<key>beginCaptures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.lustre</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Tuples.</string>
					<key>end</key>
					<string>\]</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.lustre</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#betterTypes</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.lustre</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Arrays.</string>
					<key>match</key>
					<string>([a-zA-Z]\w*)?(\^)([a-zA-Z]\w*|[1-9]\d*)</string>
					<key>name</key>
					<string>support.type.lustre</string>
				</dict>
			</array>
		</dict>
		<key>boolCst</key>
		<dict>
			<key>match</key>
			<string>\b(true|false)\b</string>
			<key>name</key>
			<string>constant.other.lustre</string>
		</dict>
		<key>constKey</key>
		<dict>
			<key>match</key>
			<string>\bconst\b</string>
			<key>name</key>
			<string>keyword.lustre</string>
		</dict>
		<key>floatCst</key>
		<dict>
			<key>match</key>
			<string>\b([0-9]+\.[0-9]*)\b</string>
			<key>name</key>
			<string>constant.other.lustre</string>
		</dict>
		<key>ident</key>
		<dict>
			<key>match</key>
			<string>\b([a-zA-Z][a-zA-Z0-9_]*)\b</string>
		</dict>
		<key>ident_c</key>
		<dict>
			<key>name</key>
			<string>constant.language.source.lustre</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ident</string>
				</dict>
			</array>
		</dict>
		<key>intCst</key>
		<dict>
			<key>match</key>
			<string>\b(0|[1-9][0-9]*)\b</string>
			<key>name</key>
			<string>constant.other.lustre</string>
		</dict>
		<key>nodeCall</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.other.lustre</string>
				</dict>
			</dict>
			<key>match</key>
			<string>([a-zA-Z]\w*)\s*\(</string>
		</dict>
		<key>nodePref</key>
		<dict>
			<key>begin</key>
			<string>^\s*(node)\s+([a-zA-Z]\w*)\s*\(</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.lustre</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>constant.language.source.lustre</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#betterTypes</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constKey</string>
				</dict>
			</array>
		</dict>
		<key>nodeRet</key>
		<dict>
			<key>begin</key>
			<string>(returns)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.lustre</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#betterTypes</string>
				</dict>
			</array>
		</dict>
		<key>streamDef</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.lustre</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.lustre</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>This is kind of ugly, but supporting arrays is tedious so...</string>
			<key>match</key>
			<string>(const|--@var|--@const|type|^)\s*([a-zA-Z][^=]*)\s*=</string>
		</dict>
		<key>stringCst</key>
		<dict>
			<key>match</key>
			<string>\"[^\"]*\"</string>
			<key>name</key>
			<string>constant.other.lustre</string>
		</dict>
		<key>structConstr</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.other.lustre</string>
				</dict>
			</dict>
			<key>match</key>
			<string>([a-zA-Z]\w*)\s*{</string>
		</dict>
		<key>types</key>
		<dict>
			<key>begin</key>
			<string>:</string>
			<key>comment</key>
			<string>Used outside of node signatures: in local variables and struct definitions</string>
			<key>end</key>
			<string>;</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#betterTypes</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.lus</string>
	<key>uuid</key>
	<string>23a435f9-1904-4b91-99ee-7609e0e45879</string>
</dict>
</plist>
